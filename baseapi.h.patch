--- ../baseapi.h	2012-04-11 20:51:41.347210922 -0400
+++ baseapi.h	2012-04-11 20:38:35.575243158 -0400
@@ -70,7 +70,9 @@
 
 class CubeRecoContext;
 class Dawg;
-class Dict;
+//class Dict;
+class PageIterator;
+class ResultIterator;
 class EquationDetect;
 class LTRResultIterator;
 class MutableIterator;
@@ -78,6 +80,7 @@
 class Trie;
 class Wordrec;
 
+/*
 typedef int (Dict::*DictFunc)(void* void_dawg_args,
                               UNICHAR_ID unichar_id, bool word_end) const;
 typedef double (Dict::*ProbabilityInContextFunc)(const char* lang,
@@ -85,6 +88,7 @@
                                                  int context_bytes,
                                                  const char* character,
                                                  int character_bytes);
+*/
 typedef void (Wordrec::*FillLatticeFunc)(const MATRIX &ratings,
                                          const LIST &best_choices,
                                          const UNICHARSET &unicharset,
@@ -583,12 +587,12 @@
   bool GetTextDirection(int* out_offset, float* out_slope);
 
   /** Sets Dict::letter_is_okay_ function to point to the given function. */
-  void SetDictFunc(DictFunc f);
+  //void SetDictFunc(DictFunc f);
 
   /** Sets Dict::probability_in_context_ function to point to the given
    * function.
    */
-  void SetProbabilityInContextFunc(ProbabilityInContextFunc f);
+  //void SetProbabilityInContextFunc(ProbabilityInContextFunc f);
 
   /** Sets Wordrec::fill_lattice_ function to point to the given function. */
   void SetFillLatticeFunc(FillLatticeFunc f);
@@ -735,6 +739,9 @@
   /** After text is recognized, break each paragraph into blocks. */
   TESS_LOCAL void DetectParagraphs(int debug_level);
 
+ public:
+  PAGE_RES*         page_res_;        ///< The page-level data.
+
   /**
    * Extract the OCR results, costs (penalty points for uncertainty),
    * and the bounding boxes of the characters.
@@ -746,12 +753,18 @@
                                     int** y0,
                                     int** x1,
                                     int** y1,
-                                    PAGE_RES* page_res);
+                                    char** char_4_coords,
+                                    int** char_x0,
+                                    int** char_y0,
+                                    int** char_x1,
+                                    int** char_y1,
+                                    PAGE_RES* page_res,
+                                    int chars_length);
 
   TESS_LOCAL const PAGE_RES* GetPageRes() const {
     return page_res_;
   };
-  /* @} */
+
 
  protected:
   Tesseract*        tesseract_;       ///< The underlying data object.
@@ -760,7 +773,7 @@
   ImageThresholder* thresholder_;     ///< Image thresholding module.
   GenericVector<ParagraphModel *>* paragraph_models_;
   BLOCK_LIST*       block_list_;      ///< The page layout.
-  PAGE_RES*         page_res_;        ///< The page-level data.
+  //PAGE_RES*         page_res_;        ///< The page-level data.
   STRING*           input_file_;      ///< Name used by training code.
   STRING*           output_file_;     ///< Name used by debug code.
   STRING*           datapath_;        ///< Current location of tessdata.
